// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WoWScriptApi.Models;

namespace WoWScriptApi.Migrations
{
    [DbContext(typeof(ScriptContext))]
    [Migration("20190813143531_comments-likes")]
    partial class commentslikes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WoWScriptApi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<string>("Content");

                    b.Property<int?>("ScriptItemId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ScriptItemId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("WoWScriptApi.Models.ImageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageId");

                    b.Property<int>("ScriptId");

                    b.Property<int?>("ScriptItemId");

                    b.HasKey("Id");

                    b.HasIndex("ScriptItemId");

                    b.ToTable("ImageItem");
                });

            modelBuilder.Entity("WoWScriptApi.Models.Likes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<int?>("ScriptItemId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ScriptItemId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("WoWScriptApi.Models.ScriptItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<string>("ClassName");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("ScriptItems");
                });

            modelBuilder.Entity("WoWScriptApi.Models.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ScriptId");

                    b.Property<int?>("ScriptItemId");

                    b.Property<string>("Spec");

                    b.HasKey("Id");

                    b.HasIndex("ScriptItemId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WoWScriptApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WoWScriptApi.Models.Comment", b =>
                {
                    b.HasOne("WoWScriptApi.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("WoWScriptApi.Models.ScriptItem", "ScriptItem")
                        .WithMany("Comments")
                        .HasForeignKey("ScriptItemId");
                });

            modelBuilder.Entity("WoWScriptApi.Models.ImageItem", b =>
                {
                    b.HasOne("WoWScriptApi.Models.ScriptItem", "ScriptItem")
                        .WithMany("ImageItems")
                        .HasForeignKey("ScriptItemId");
                });

            modelBuilder.Entity("WoWScriptApi.Models.Likes", b =>
                {
                    b.HasOne("WoWScriptApi.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("WoWScriptApi.Models.ScriptItem", "ScriptItem")
                        .WithMany("Likes")
                        .HasForeignKey("ScriptItemId");
                });

            modelBuilder.Entity("WoWScriptApi.Models.ScriptItem", b =>
                {
                    b.HasOne("WoWScriptApi.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");
                });

            modelBuilder.Entity("WoWScriptApi.Models.Tags", b =>
                {
                    b.HasOne("WoWScriptApi.Models.ScriptItem", "ScriptItem")
                        .WithMany("Tags")
                        .HasForeignKey("ScriptItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
